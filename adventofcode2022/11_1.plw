var input := '
Monkey 0:
  Starting items: 78, 53, 89, 51, 52, 59, 58, 85
  Operation: new = old * 3
  Test: divisible by 5
    If true: throw to monkey 2
    If false: throw to monkey 7

Monkey 1:
  Starting items: 64
  Operation: new = old + 7
  Test: divisible by 2
    If true: throw to monkey 3
    If false: throw to monkey 6

Monkey 2:
  Starting items: 71, 93, 65, 82
  Operation: new = old + 5
  Test: divisible by 13
    If true: throw to monkey 5
    If false: throw to monkey 4

Monkey 3:
  Starting items: 67, 73, 95, 75, 56, 74
  Operation: new = old + 8
  Test: divisible by 19
    If true: throw to monkey 6
    If false: throw to monkey 0

Monkey 4:
  Starting items: 85, 91, 90
  Operation: new = old + 4
  Test: divisible by 11
    If true: throw to monkey 3
    If false: throw to monkey 1

Monkey 5:
  Starting items: 67, 96, 69, 55, 70, 83, 62
  Operation: new = old * 2
  Test: divisible by 3
    If true: throw to monkey 4
    If false: throw to monkey 1

Monkey 6:
  Starting items: 53, 86, 98, 70, 64
  Operation: new = old + 6
  Test: divisible by 7
    If true: throw to monkey 7
    If false: throw to monkey 0

Monkey 7:
  Starting items: 88, 64
  Operation: new = old * old
  Test: divisible by 17
    If true: throw to monkey 2
    If false: throw to monkey 5
';

type monkey {
	items [integer],
	operation integer,
	operand integer,
	divisible integer,
	monkey_true integer,
	monkey_false integer,
	count integer
};

var nl := '
';

var lines := split(input, nl);
lines := lines[1 .. last_index(lines)];

var monkeys := [] as [monkey];
var i := 0;
while (i < length(lines)) loop
	i := i + 1;
	var items := [] as [integer];
	for i in split(subtext(lines[i], 17), ',') loop
		items := items || [integer(subtext(i, 1))];
	end loop;
	i := i + 1;
	var oper := split(subtext(lines[i], 23), ' ');
	var operation := case oper[0] when '+' then 1 else 2 end;
	var operand := 0;
	if oper[1] = 'old' then
		operation := 3;
	else
		operand := integer(oper[1]);
	end if;
	i := i + 1;
	var divisible := integer(subtext(lines[i], 21));
	i := i + 1;
	var monkey_true := integer(subtext(lines[i], 29));
	i := i + 1;
	var monkey_false := integer(subtext(lines[i], 30));
	i := i + 2;
	monkeys := monkeys || [{
		items: items,
		operation: operation,
		operand: operand,
		divisible: divisible,
		monkey_true: monkey_true,
		monkey_false: monkey_false,
		count: 0
	} as monkey];
end loop;

for round in 1 .. 20 loop
	for monkey_id in 0 .. last_index(monkeys) loop
		var monkey := monkeys[monkey_id];
		monkeys[monkey_id].count := monkey.count + length(monkey.items);
		for item in monkey.items loop
			item := case monkey.operation
				when 1 then item + monkey.operand
				when 2 then item * monkey.operand
				else item * item
			end;
			item := item / 3;
			if item % monkey.divisible = 0 then
				monkeys[monkey.monkey_true].items := monkeys[monkey.monkey_true].items || [item];
			else
				monkeys[monkey.monkey_false].items := monkeys[monkey.monkey_false].items || [item];
			end if;	
		end loop;
		monkeys[monkey_id].items := [] as [integer];
	end loop;
end loop;

var max1 := 0;
var max2 := 0;
for monkey_id in 0 .. last_index(monkeys) loop
	var count := monkeys[monkey_id].count;
	if count >= max1 then
		max2 := max1;
		max1 := count;
	elsif count > max2 then
		max2 := count;
	end if;
end loop;

print(text(max1 * max2));

if max1 * max2 = 50616 then
	print('Correct');
else
	print('Error');
end if;
 




